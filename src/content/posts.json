{
    "posts": [
      {
        "id": "first-post",
        "title": "첫 번째 블로그 포스트",
        "date": "2024-01-15",
        "author": "작성자",
        "tags": ["React", "JavaScript", "시작하기"],
        "excerpt": "React를 사용한 블로그 시스템의 첫 번째 포스트입니다.",
        "content": "## 환영합니다!\n\n이것은 첫 번째 블로그 포스트입니다. React를 사용하여 만든 간단한 블로그 시스템입니다.\n\n### 주요 기능\n\n- 포스트 목록 보기\n- 개별 포스트 상세 보기\n- 태그 시스템\n\n```javascript\nconst welcomeMessage = () => {\n  console.log('블로그에 오신 것을 환영합니다!');\n};\n```"
      },
      {
        "id": "react-tips",
        "title": "React 개발 팁 모음",
        "date": "2024-01-10",
        "author": "작성자",
        "tags": ["React", "팁", "개발"],
        "excerpt": "React 개발을 할 때 유용한 팁들을 모아봤습니다.",
        "content": "## React 개발 팁\n\n### 1. 컴포넌트 최적화\n\n불필요한 리렌더링을 방지하기 위해 React.memo를 사용하세요.\n\n### 2. 상태 관리\n\n복잡한 상태는 useReducer를 고려해보세요."
      },
      {
        "id": "css-guide",
        "title": "CSS Grid와 Flexbox 가이드",
        "date": "2024-01-05",
        "author": "작성자",
        "tags": ["CSS", "레이아웃", "가이드"],
        "excerpt": "CSS Grid와 Flexbox를 활용한 레이아웃 구성 방법을 알아봅시다.",
        "content": "## CSS 레이아웃\n\n### Grid vs Flexbox\n\n- **Grid**: 2차원 레이아웃에 적합\n- **Flexbox**: 1차원 레이아웃에 적합\n\n### 예제\n\n```css\n.container {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px;\n}\n```"
      }
    ]
  }